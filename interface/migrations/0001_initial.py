# Generated by Django 3.2.9 on 2021-11-11 11:02

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import interface.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='userModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('first_name', models.CharField(max_length=20)),
                ('last_name', models.CharField(max_length=20)),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('is_active', models.BooleanField(default=False)),
                ('is_staff', models.BooleanField(default=False)),
                ('works_at', models.CharField(blank=True, max_length=110, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True, null=True)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='cityData',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('odmatrix_csv', models.FileField(null=True, upload_to=interface.models.set_upload_path)),
                ('city_geojson', models.FileField(null=True, upload_to=interface.models.set_upload_path)),
                ('city_profile_json', models.FileField(null=True, upload_to=interface.models.set_upload_path)),
                ('demographics_csv', models.FileField(null=True, upload_to=interface.models.set_upload_path)),
                ('employment_csv', models.FileField(null=True, upload_to=interface.models.set_upload_path)),
                ('households_csv', models.FileField(null=True, upload_to=interface.models.set_upload_path)),
                ('target_population', models.IntegerField(default=100000, null=True)),
                ('city_name', models.CharField(max_length=20, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='RegisterOrigin',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField()),
                ('redirect_url', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='UserRegisterToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='UserPasswordResetToken',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('token', models.CharField(max_length=100, unique=True)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='cityInstantiation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('individuals_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('houses_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('workplaces_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('schools_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('ward_centre_distance_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('common_area_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('fraction_population_json', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('prg_np_random_state_bin', models.FileField(null=True, upload_to=interface.models.set_instantiation_filePath)),
                ('status', models.CharField(choices=[('Created', 'Created'), ('Running', 'Running'), ('Complete', 'Complete'), ('Error', 'Error')], default='Created', max_length=10, null=True)),
                ('created_on', models.DateTimeField(auto_now_add=True, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('inst_name', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='interface.citydata')),
            ],
        ),
    ]
